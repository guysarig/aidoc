name: CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run test stage
        run: echo "Running test stage"
        # Uncomment and modify the following lines if needed
        # - name: Install Python and pip
        #   run: sudo apt-get install python3 python3-pip
        # - name: Setup virtual environment
        #   run: source helper_scripts/setup_venv.sh
        # - name: Run tests
        #   run: pytest

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bash git curl unzip zip

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
          unzip terraform_1.5.0_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -v

      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

      - name: Check for Python changes
        run: |
          set -e
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep '\.py$')
          echo "Changed files: $CHANGED_FILES"
          if [ -n "$CHANGED_FILES" ]; then
            echo "Python code has changed, packaging Lambda payload."
            source helper_scripts/setup_venv.sh
            sh create_tf_backend_destinations.sh
            echo "Lambda payloads built successfully."
          else
            echo "No changes in Python code, skipping packaging."
          fi

      - name: Plan infrastructure
        run: |
          cd iac
          terraform init
          terraform plan -out=tfplan
          cd ..

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

      - name: Deploy infrastructure
        run: |
          cd iac
          terraform init
          terraform plan -out=tfplan
          echo "Deploying infrastructure."
          terraform apply tfplan